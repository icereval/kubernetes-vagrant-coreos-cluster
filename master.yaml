#cloud-config

write-files:
  - path: /etc/profile.d/etcdctl.sh
    permissions: 0644
    owner: core
    content: |
      # configure etcdctl to work with our remote etcd servers
      export ETCDCTL_PEERS=__ETCD_SERVERS__
  - path: /etc/profile.d/fleetctl.sh
    permissions: 0644
    owner: core
    content: |
      # configure fleetctl to work with our remote etcd servers
      export FLEETCTL_ENDPOINT=unix:///var/run/fleet.sock
      export FLEETCTL_EXPERIMENTAL_API=true
coreos:
  fleet:
    public-ip: $public_ipv4
    etcd-servers: __ETCD_SERVERS__
    metadata: role=master
  flannel:
    etcd_endpoints: __ETCD_SERVERS__
    interface: ens34 # eth1
    ip_masq: yes
  locksmith:
    endpoint: __ETCD_SERVERS__
  units:
    - name: flanneld.service
      command: start
    - name: docker-cache.service
      command: start
      content: |
        [Unit]
        Description=Docker cache proxy
        Requires=early-docker.service
        After=early-docker.service
        Before=early-docker.target

        [Service]
        Restart=always
        TimeoutStartSec=0
        RestartSec=5
        Environment="TMPDIR=/var/tmp/"
        Environment="DOCKER_HOST=unix:///var/run/early-docker.sock"
        ExecStartPre=-/usr/bin/docker kill docker-registry
        ExecStartPre=-/usr/bin/docker rm docker-registry
        ExecStartPre=/usr/bin/docker pull quay.io/devops/docker-registry:latest
        ExecStart=/usr/bin/docker run --rm --net host --name docker-registry \
          -e STANDALONE=false \
          -e MIRROR_SOURCE=https://registry-1.docker.io \
          -e MIRROR_SOURCE_INDEX=https://index.docker.io \
          -e MIRROR_TAGS_CACHE_TTL=1800 \
          quay.io/devops/docker-registry:latest
    - name: fleet.service
      command: start
    - name: docker.service
      command: start
      drop-ins:
        - name: 51-docker-mirror.conf
          content: |
            [Unit]
            Requires=docker-cache.service
            After=docker-cache.service
            [Service]
            Environment=DOCKER_OPTS='--registry-mirror=http://$private_ipv4:5000'
    - name: kube-apiserver.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes API Server
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=etcd.service docker-cache.service
        After=etcd.service docker-cache.service

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/__RELEASE__/bin/linux/amd64/kube-apiserver
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-apiserver
        ExecStart=/opt/bin/kube-apiserver \
          --address=0.0.0.0 \
          --port=8080 \
          --portal_net=10.100.0.0/16 \
          --etcd_servers=__ETCD_SERVERS__ \
          --public_address_override=$private_ipv4 \
          --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-controller-manager.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Controller Manager
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver.service
        After=kube-apiserver.service

        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/__RELEASE__/bin/linux/amd64/kube-controller-manager
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-controller-manager
        ExecStart=/opt/bin/kube-controller-manager \
          --master=127.0.0.1:8080 \
          --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-scheduler.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Scheduler
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver.service
        After=kube-apiserver.service

        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/__RELEASE__/bin/linux/amd64/kube-scheduler
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-scheduler
        ExecStart=/opt/bin/kube-scheduler --master=127.0.0.1:8080
        Restart=always
        RestartSec=10
    - name: kube-register.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Registration Service
        Documentation=https://github.com/kelseyhightower/kube-register
        Requires=kube-apiserver.service
        After=kube-apiserver.service
        Requires=fleet.service
        After=fleet.service

        [Service]
        # temporary fix for 201 (created)
        # ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/k8s/kube-register
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kub/kube-register
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-register
        ExecStart=/opt/bin/kube-register \
          --metadata=role=node \
          --fleet-endpoint=unix:///var/run/fleet.sock \
          --api-endpoint=http://127.0.0.1:8080
        Restart=always
        RestartSec=10
  update:
    group: __CHANNEL__
    reboot-strategy: off
